{"version":3,"sources":["src/PNotifyCallbacks.html"],"names":[],"mappings":";;;;;;;;AAGE,KAAI,QAAQ,QAAQ,SAAR,CAAkB,IAA9B;AACA,KAAI,SAAS,QAAQ,SAAR,CAAkB,KAA/B;;AAEA,KAAM,YAAY,SAAZ,SAAY,CAAC,MAAD,EAAS,OAAT,EAAkB,IAAlB,EAA2B;AAC3C,MAAI,UAAU,SAAS,OAAO,GAAP,GAAa,OAAtB,GAAgC,QAAQ,OAAtD;AACA,MAAI,MAAO,WAAW,QAAQ,SAApB,GAAiC,QAAQ,SAAzC,GAAqD,EAA/D;AACA,SAAO,IAAI,IAAJ,IAAY,IAAI,IAAJ,CAAZ,GAAwB;AAAA,UAAM,IAAN;AAAA,GAA/B;AACD,EAJD;;AAMA,SAAQ,SAAR,CAAkB,IAAlB,GAAyB,YAAmB;AAC1C,MAAI,MAAM,UAAU,IAAV,EAAgB,IAAhB,EAAsB,YAAtB,EAAoC,IAApC,CAAV;AACA,MAAI,QAAQ,KAAZ,EAAmB;AAAA,qCAFiB,IAEjB;AAFiB,QAEjB;AAAA;;AACjB,SAAM,KAAN,CAAY,IAAZ,EAAkB,IAAlB;AACA,aAAU,IAAV,EAAgB,IAAhB,EAAsB,WAAtB,EAAmC,IAAnC;AACD;AACF,EAND;;AAQA,SAAQ,SAAR,CAAkB,KAAlB,GAA0B,UAAU,SAAV,EAA8B;AACtD,MAAI,MAAM,UAAU,IAAV,EAAgB,IAAhB,EAAsB,aAAtB,EAAqC,IAArC,EAA2C,SAA3C,CAAV;AACA,MAAI,QAAQ,KAAZ,EAAmB;AAAA,sCAF6B,IAE7B;AAF6B,QAE7B;AAAA;;AACjB,UAAO,KAAP,CAAa,IAAb,GAAoB,SAApB,SAAkC,IAAlC;AACA,aAAU,IAAV,EAAgB,IAAhB,EAAsB,YAAtB,EAAoC,IAApC,EAA0C,SAA1C;AACD;AACF,EAND;;AAQF,UAAA,KAAA,CACW,SADX,EACsB;AAChB,YAAU,GAAV,GAAgB,WAAhB;;AAEA,YAAU,YAAV,GAAyB,SAAzB;;AAEA,MAAI,SAAS,QAAQ,KAArB;AACA,MAAI,UAAU,QAAQ,MAAtB;AACA,MAAI,QAAQ,QAAQ,IAApB;AACA,MAAI,WAAW,QAAQ,OAAvB;AACA,MAAI,SAAS,QAAQ,KAArB;;AAEA,MAAI,OAAO,SAAP,IAAO,CAAC,QAAD,EAAW,OAAX,EAAuB;AAChC,aAAU,IAAV,EAAgB,OAAhB,EAAyB,YAAzB,EAAuC,OAAvC;AACA,OAAI,SAAS,SAAS,OAAT,CAAb;AACA,aAAU,MAAV,EAAkB,IAAlB,EAAwB,WAAxB,EAAqC,MAArC;AACA,UAAO,MAAP;AACD,GALD;;AAOA,UAAQ,KAAR,GAAgB,UAAC,OAAD,EAAa;AAC3B,UAAO,KAAK,MAAL,EAAa,OAAb,CAAP;AACD,GAFD;AAGA,UAAQ,MAAR,GAAiB,UAAC,OAAD,EAAa;AAC5B,UAAO,KAAK,OAAL,EAAc,OAAd,CAAP;AACD,GAFD;AAGA,UAAQ,IAAR,GAAe,UAAC,OAAD,EAAa;AAC1B,UAAO,KAAK,KAAL,EAAY,OAAZ,CAAP;AACD,GAFD;AAGA,UAAQ,OAAR,GAAkB,UAAC,OAAD,EAAa;AAC7B,UAAO,KAAK,QAAL,EAAe,OAAf,CAAP;AACD,GAFD;AAGA,UAAQ,KAAR,GAAgB,UAAC,OAAD,EAAa;AAC3B,UAAO,KAAK,MAAL,EAAa,OAAb,CAAP;AACD,GAFD;;AAIF;AACE,UAAQ,OAAR,CAAgB,SAAhB,GAA4B,SAA5B;AACD","sourcesContent":["<script>\n  import PNotify from './PNotify.html';\n\n  let _open = PNotify.prototype.open;\n  let _close = PNotify.prototype.close;\n\n  const callbacks = (notice, options, name) => {\n    let modules = notice ? notice.get().modules : options.modules;\n    let cbs = (modules && modules.Callbacks) ? modules.Callbacks : {};\n    return cbs[name] ? cbs[name] : () => true;\n  };\n\n  PNotify.prototype.open = function (...args) {\n    let ret = callbacks(this, null, 'beforeOpen')(this);\n    if (ret !== false) {\n      _open.apply(this, args);\n      callbacks(this, null, 'afterOpen')(this);\n    }\n  };\n\n  PNotify.prototype.close = function (timerHide, ...args) {\n    let ret = callbacks(this, null, 'beforeClose')(this, timerHide);\n    if (ret !== false) {\n      _close.apply(this, [timerHide, ...args]);\n      callbacks(this, null, 'afterClose')(this, timerHide);\n    }\n  };\n\n  export default {\n    setup (Component) {\n      Component.key = 'Callbacks';\n\n      Component.getCallbacks = callbacks;\n\n      let _alert = PNotify.alert;\n      let _notice = PNotify.notice;\n      let _info = PNotify.info;\n      let _success = PNotify.success;\n      let _error = PNotify.error;\n\n      let init = (original, options) => {\n        callbacks(null, options, 'beforeInit')(options);\n        let notice = original(options);\n        callbacks(notice, null, 'afterInit')(notice);\n        return notice;\n      };\n\n      PNotify.alert = (options) => {\n        return init(_alert, options);\n      };\n      PNotify.notice = (options) => {\n        return init(_notice, options);\n      };\n      PNotify.info = (options) => {\n        return init(_info, options);\n      };\n      PNotify.success = (options) => {\n        return init(_success, options);\n      };\n      PNotify.error = (options) => {\n        return init(_error, options);\n      };\n\n      // Register the module with PNotify.\n      PNotify.modules.Callbacks = Component;\n    }\n  };\n</script>\n"]}